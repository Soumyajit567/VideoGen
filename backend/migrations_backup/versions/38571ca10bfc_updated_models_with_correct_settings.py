# """Updated models with correct settings

# Revision ID: 38571ca10bfc
# Revises: 466aafbd5aaa
# Create Date: 2024-10-16 13:29:40.891976

# """
# from typing import Sequence, Union

# from alembic import op
# import sqlalchemy as sa


# # revision identifiers, used by Alembic.
# revision: str = '38571ca10bfc'
# down_revision: Union[str, None] = '466aafbd5aaa'
# branch_labels: Union[str, Sequence[str], None] = None
# depends_on: Union[str, Sequence[str], None] = None


# def upgrade() -> None:
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.drop_table('users')
#     op.drop_table('videos')
#     # ### end Alembic commands ###


# def downgrade() -> None:
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.create_table('videos',
#     sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
#     sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
#     sa.Column('input_text', sa.TEXT(), autoincrement=False, nullable=False),
#     sa.Column('video_length', sa.INTEGER(), autoincrement=False, nullable=False),
#     sa.Column('file_path', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
#     sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='videos_user_id_fkey', ondelete='CASCADE'),
#     sa.PrimaryKeyConstraint('id', name='videos_pkey')
#     )
#     op.create_table('users',
#     sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
#     sa.Column('username', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
#     sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
#     sa.Column('password', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
#     sa.PrimaryKeyConstraint('id', name='users_pkey'),
#     sa.UniqueConstraint('email', name='users_email_key'),
#     sa.UniqueConstraint('username', name='users_username_key')
#     )
#     # ### end Alembic commands ###

# """Updated models with correct settings

# Revision ID: 38571ca10bfc
# Revises: 466aafbd5aaa
# Create Date: 2024-10-16 13:29:40.891976

# """
# from typing import Sequence, Union

# from alembic import op
# import sqlalchemy as sa


# # revision identifiers, used by Alembic.
# revision: str = '38571ca10bfc'
# down_revision: Union[str, None] = '466aafbd5aaa'
# branch_labels: Union[str, Sequence[str], None] = None
# depends_on: Union[str, Sequence[str], None] = None


# def upgrade() -> None:
#     # ### commands auto generated by Alembic - please adjust! ###
#     # Drop the dependent table first to avoid foreign key constraints
#     op.drop_table('videos')
#     op.drop_table('users')
#     # ### end Alembic commands ###


# def downgrade() -> None:
#     # ### commands auto generated by Alembic - please adjust! ###
#     # Create the users table first to satisfy foreign key dependency in videos table
#     op.create_table('users',
#         sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
#         sa.Column('username', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
#         sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
#         sa.Column('password', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
#         sa.PrimaryKeyConstraint('id', name='users_pkey'),
#         sa.UniqueConstraint('email', name='users_email_key'),
#         sa.UniqueConstraint('username', name='users_username_key')
#     )
#     op.create_table('videos',
#         sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
#         sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
#         sa.Column('input_text', sa.TEXT(), autoincrement=False, nullable=False),
#         sa.Column('video_length', sa.INTEGER(), autoincrement=False, nullable=False),
#         sa.Column('file_path', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
#         sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='videos_user_id_fkey', ondelete='CASCADE'),
#         sa.PrimaryKeyConstraint('id', name='videos_pkey')
#     )
#     # ### end Alembic commands ###

"""Updated models with correct settings

Revision ID: 38571ca10bfc
Revises: 466aafbd5aaa
Create Date: 2024-10-16 13:29:40.891976

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine.reflection import Inspector
from sqlalchemy import create_engine

# revision identifiers, used by Alembic.
revision: str = '38571ca10bfc'
down_revision: Union[str, None] = '466aafbd5aaa'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    inspector = Inspector.from_engine(bind)
    
    # Check if tables exist before dropping them
    if 'videos' in inspector.get_table_names():
        op.drop_table('videos')
    if 'users' in inspector.get_table_names():
        op.drop_table('users')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('username', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
        sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
        sa.Column('password', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint('id', name='users_pkey'),
        sa.UniqueConstraint('email', name='users_email_key'),
        sa.UniqueConstraint('username', name='users_username_key')
    )
    op.create_table('videos',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('input_text', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('video_length', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('file_path', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='videos_user_id_fkey', ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id', name='videos_pkey')
    )
    # ### end Alembic commands ###
