# """Updated models

# Revision ID: 466aafbd5aaa
# Revises: 8da55ca65fc8
# Create Date: 2024-10-16 13:07:49.989298

# """
# from typing import Sequence, Union

# from alembic import op
# import sqlalchemy as sa


# # revision identifiers, used by Alembic.
# revision: str = '466aafbd5aaa'
# down_revision: Union[str, None] = '8da55ca65fc8'
# branch_labels: Union[str, Sequence[str], None] = None
# depends_on: Union[str, Sequence[str], None] = None


# def upgrade() -> None:
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.drop_table('user')
#     op.drop_table('video')
#     # ### end Alembic commands ###


# def downgrade() -> None:
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.create_table('video',
#     sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
#     sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
#     sa.Column('input_text', sa.TEXT(), autoincrement=False, nullable=False),
#     sa.Column('video_length', sa.INTEGER(), autoincrement=False, nullable=False),
#     sa.Column('file_path', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
#     sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='video_user_id_fkey'),
#     sa.PrimaryKeyConstraint('id', name='video_pkey')
#     )
#     op.create_table('user',
#     sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
#     sa.Column('username', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
#     sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
#     sa.Column('password', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
#     sa.PrimaryKeyConstraint('id', name='user_pkey'),
#     sa.UniqueConstraint('email', name='user_email_key'),
#     sa.UniqueConstraint('username', name='user_username_key')
#     )
#     # ### end Alembic commands ###

"""Updated models

Revision ID: 466aafbd5aaa
Revises: 8da55ca65fc8
Create Date: 2024-10-16 13:07:49.989298

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '466aafbd5aaa'
down_revision: Union[str, None] = '8da55ca65fc8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop the foreign key constraint on the 'video' table first
    op.drop_constraint('video_user_id_fkey', 'video', type_='foreignkey')
    # Drop the 'video' table
    op.drop_table('video')
    # Drop the 'user' table
    op.drop_table('user')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('email', name='user_email_key'),
    sa.UniqueConstraint('username', name='user_username_key')
    )
    op.create_table('video',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('input_text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('video_length', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('file_path', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='video_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='video_pkey')
    )
    # ### end Alembic commands ###
